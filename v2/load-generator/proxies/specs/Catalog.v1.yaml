openapi: 3.0.0
info:
  title: Catalog
  version: '1.0'
  contact:
    name: Ignacio Garcia
    email: igngar@google.com
  description: Catalog of Products.
servers:
  - url: 'https://emea-cs-hybrid-demo20-test.hybrid-apigee.net/v1'
paths:
  /catalog:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                response-catalog-empty:
                  value: {}
      operationId: get-catalog
      description: Provides an empty response.
    post:
      summary: ''
      operationId: post-catalog
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                priceUsd:
                  type: object
                  properties:
                    units:
                      type: string
                      minLength: 1
                    currencyCode:
                      type: string
                      minLength: 1
                  required:
                    - units
                    - currencyCode
                name:
                  type: string
                  minLength: 1
                description:
                  type: string
                  minLength: 1
                categories:
                  type: array
                  items:
                    required: []
                    properties: {}
                id:
                  type: string
                  minLength: 1
                picture:
                  type: string
                  minLength: 1
              required:
                - priceUsd
                - name
                - description
                - categories
                - id
                - picture
  '/catalog/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id of the product
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  priceUsd:
                    type: object
                    required:
                      - units
                      - currencyCode
                    properties:
                      units:
                        type: string
                        minLength: 1
                      currencyCode:
                        type: string
                        minLength: 1
                  name:
                    type: string
                    minLength: 1
                  description:
                    type: string
                    minLength: 1
                  categories:
                    type: array
                    items:
                      type: object
                  id:
                    type: string
                    minLength: 1
                  picture:
                    type: string
                    minLength: 1
                required:
                  - priceUsd
                  - name
                  - description
                  - categories
                  - id
                  - picture
      operationId: get-catalog-id
      security:
        - apikey: []
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
  securitySchemes:
    apikey:
      type: apiKey
      in: query
      name: apikey
security:
  - apikey: []
